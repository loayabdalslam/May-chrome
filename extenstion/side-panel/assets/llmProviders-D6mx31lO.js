import{c as d,S as g}from"./index-CU5ouepC.js";var a=(e=>(e.OpenAI="openai",e.Anthropic="anthropic",e.DeepSeek="deepseek",e.Gemini="gemini",e.Grok="grok",e.Ollama="ollama",e.AzureOpenAI="azure_openai",e.OpenRouter="openrouter",e.Groq="groq",e.Cerebras="cerebras",e.Llama="llama",e.CustomOpenAI="custom_openai",e))(a||{});const w={openai:["gpt-5","gpt-5-mini","gpt-5-chat-latest","gpt-4.1","gpt-4.1-mini","gpt-4o"],anthropic:["claude-opus-4-1","claude-sonnet-4-0","claude-3-7-sonnet-latest","claude-3-5-haiku-latest"],deepseek:["deepseek-chat","deepseek-reasoner"],gemini:["gemini-2.5-flash","gemini-2.5-pro"],grok:["grok-3","grok-3-fast","grok-3-mini","grok-3-mini-fast"],ollama:["qwen3:14b","falcon3:10b","qwen2.5-coder:14b","mistral-small:24b"],azure_openai:["gpt-5","gpt-5-mini","gpt-4.1","gpt-4.1-mini","gpt-4o"],openrouter:["deepseek/deepseek-chat-v3.1","google/gemini-2.5-pro","google/gemini-2.5-flash","openai/gpt-4o-2024-11-20"],groq:["llama-3.3-70b-versatile"],cerebras:["llama-3.3-70b"],llama:["Llama-3.3-70B-Instruct","Llama-3.3-8B-Instruct","Llama-4-Maverick-17B-128E-Instruct-FP8","Llama-4-Scout-17B-16E-Instruct-FP8"]},s=d("llm-api-keys",{providers:{}},{storageEnum:g.Local,liveUpdate:!0});function c(e){if(e===a.AzureOpenAI||typeof e=="string"&&e.startsWith(`${a.AzureOpenAI}_`))return a.AzureOpenAI;switch(e){case a.OpenAI:case a.Anthropic:case a.DeepSeek:case a.Gemini:case a.Grok:case a.Ollama:case a.OpenRouter:case a.Groq:case a.Cerebras:return e;default:return a.CustomOpenAI}}function n(e){switch(e){case a.OpenAI:return"OpenAI";case a.Anthropic:return"Anthropic";case a.DeepSeek:return"DeepSeek";case a.Gemini:return"Gemini";case a.Grok:return"Grok";case a.Ollama:return"Ollama";case a.AzureOpenAI:return"Azure OpenAI";case a.OpenRouter:return"OpenRouter";case a.Groq:return"Groq";case a.Cerebras:return"Cerebras";case a.Llama:return"Llama";default:return e}}function u(e,t){const r={...t};return r.name||(r.name=n(e)),r.type||(r.type=c(e)),r.type===a.AzureOpenAI?(r.azureApiVersion===void 0&&(r.azureApiVersion="2024-02-15-preview"),r.azureDeploymentNames||(r.azureDeploymentNames=[]),Object.prototype.hasOwnProperty.call(r,"modelNames")&&delete r.modelNames):r.modelNames||(r.modelNames=w[e]||[]),r.createdAt||(r.createdAt=new Date("03/04/2025").getTime()),r}const f={...s,async setProvider(e,t){var i,l,p,m;if(!e)throw new Error("Provider id cannot be empty");if(t.apiKey===void 0)throw new Error("API key must be provided (can be empty for local models)");const r=t.type||c(e);if(r===a.AzureOpenAI){if(!((i=t.baseUrl)!=null&&i.trim()))throw new Error("Azure Endpoint (baseUrl) is required");if(!t.azureDeploymentNames||t.azureDeploymentNames.length===0)throw new Error("At least one Azure Deployment Name is required");if(!((l=t.azureApiVersion)!=null&&l.trim()))throw new Error("Azure API Version is required");if(!((p=t.apiKey)!=null&&p.trim()))throw new Error("API Key is required for Azure OpenAI")}else if(r!==a.CustomOpenAI&&r!==a.Ollama&&!((m=t.apiKey)!=null&&m.trim()))throw new Error(`API Key is required for ${n(e)}`);r!==a.AzureOpenAI&&(!t.modelNames||t.modelNames.length===0)&&console.warn(`Provider ${e} of type ${r} is being saved without model names.`);const o={apiKey:t.apiKey||"",baseUrl:t.baseUrl,name:t.name||n(e),type:r,createdAt:t.createdAt||Date.now(),...r===a.AzureOpenAI?{azureDeploymentNames:t.azureDeploymentNames||[],azureApiVersion:t.azureApiVersion}:{modelNames:t.modelNames||[]}};console.log(`[llmProviderStore.setProvider] Saving config for ${e}:`,JSON.stringify(o));const A=await s.get()||{providers:{}};await s.set({providers:{...A.providers,[e]:o}})},async getProvider(e){const r=(await s.get()||{providers:{}}).providers[e];return r?u(e,r):void 0},async removeProvider(e){const r={...(await s.get()||{providers:{}}).providers};delete r[e],await s.set({providers:r})},async hasProvider(e){const t=await s.get()||{providers:{}};return e in t.providers},async getAllProviders(){const t={...(await s.get()).providers};for(const[r,o]of Object.entries(t))t[r]=u(r,o);return t}};export{n as getDefaultDisplayNameFromProviderId,c as getProviderTypeByProviderId,f as llmProviderStore};
